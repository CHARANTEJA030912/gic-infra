{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chara\\\\Reactapps\\\\gic\\\\gic\\\\src\\\\components\\\\ServiceCard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from \"react\";\nimport \"./ServiceCard.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ServiceCard({\n  service,\n  index,\n  title,\n  description,\n  image\n}) {\n  _s();\n  const cardRef = useRef(null);\n  const [inView, setInView] = useState(false);\n  useEffect(() => {\n    const observer = new IntersectionObserver(([entry]) => {\n      setInView(entry.isIntersecting);\n    }, {\n      threshold: 0.2\n    });\n    if (cardRef.current) {\n      observer.observe(cardRef.current);\n    }\n    return () => observer.disconnect();\n  }, []);\n  const cardTitle = title || service && service.title;\n  const cardDescription = description || service && service.description;\n  const cardImage = image || service && service.image;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: cardRef,\n    className: `service-card ${inView ? \"in-view\" : \"\"}`,\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: cardImage,\n      alt: cardTitle,\n      className: \"service-card-image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"service-card-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"service-card-title\",\n        children: cardTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"service-card-description\",\n        children: cardDescription\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(ServiceCard, \"IWMC+dKEGUSTRevxwqtmXjpa+9U=\");\n_c = ServiceCard;\nexport default ServiceCard;\nvar _c;\n$RefreshReg$(_c, \"ServiceCard\");","map":{"version":3,"names":["React","useRef","useEffect","useState","jsxDEV","_jsxDEV","ServiceCard","service","index","title","description","image","_s","cardRef","inView","setInView","observer","IntersectionObserver","entry","isIntersecting","threshold","current","observe","disconnect","cardTitle","cardDescription","cardImage","ref","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/chara/Reactapps/gic/gic/src/components/ServiceCard.jsx"],"sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\r\nimport \"./ServiceCard.css\";\r\n\r\nfunction ServiceCard({ service, index, title, description, image }) {\r\n  const cardRef = useRef(null);\r\n  const [inView, setInView] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const observer = new IntersectionObserver(\r\n      ([entry]) => {\r\n        setInView(entry.isIntersecting);\r\n      },\r\n      { threshold: 0.2 }\r\n    );\r\n    if (cardRef.current) {\r\n      observer.observe(cardRef.current);\r\n    }\r\n    return () => observer.disconnect();\r\n  }, []);\r\n\r\n  const cardTitle = title || (service && service.title);\r\n  const cardDescription = description || (service && service.description);\r\n  const cardImage = image || (service && service.image);\r\n\r\n  return (\r\n    <div ref={cardRef} className={`service-card ${inView ? \"in-view\" : \"\"}`}>\r\n      <img src={cardImage} alt={cardTitle} className=\"service-card-image\" />\r\n      <div className=\"service-card-content\">\r\n        <h2 className=\"service-card-title\">{cardTitle}</h2>\r\n        <p className=\"service-card-description\">{cardDescription}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ServiceCard;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,OAAO,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3B,SAASC,WAAWA,CAAC;EAAEC,OAAO;EAAEC,KAAK;EAAEC,KAAK;EAAEC,WAAW;EAAEC;AAAM,CAAC,EAAE;EAAAC,EAAA;EAClE,MAAMC,OAAO,GAAGZ,MAAM,CAAC,IAAI,CAAC;EAC5B,MAAM,CAACa,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAE3CD,SAAS,CAAC,MAAM;IACd,MAAMc,QAAQ,GAAG,IAAIC,oBAAoB,CACvC,CAAC,CAACC,KAAK,CAAC,KAAK;MACXH,SAAS,CAACG,KAAK,CAACC,cAAc,CAAC;IACjC,CAAC,EACD;MAAEC,SAAS,EAAE;IAAI,CACnB,CAAC;IACD,IAAIP,OAAO,CAACQ,OAAO,EAAE;MACnBL,QAAQ,CAACM,OAAO,CAACT,OAAO,CAACQ,OAAO,CAAC;IACnC;IACA,OAAO,MAAML,QAAQ,CAACO,UAAU,CAAC,CAAC;EACpC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,SAAS,GAAGf,KAAK,IAAKF,OAAO,IAAIA,OAAO,CAACE,KAAM;EACrD,MAAMgB,eAAe,GAAGf,WAAW,IAAKH,OAAO,IAAIA,OAAO,CAACG,WAAY;EACvE,MAAMgB,SAAS,GAAGf,KAAK,IAAKJ,OAAO,IAAIA,OAAO,CAACI,KAAM;EAErD,oBACEN,OAAA;IAAKsB,GAAG,EAAEd,OAAQ;IAACe,SAAS,EAAE,gBAAgBd,MAAM,GAAG,SAAS,GAAG,EAAE,EAAG;IAAAe,QAAA,gBACtExB,OAAA;MAAKyB,GAAG,EAAEJ,SAAU;MAACK,GAAG,EAAEP,SAAU;MAACI,SAAS,EAAC;IAAoB;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACtE9B,OAAA;MAAKuB,SAAS,EAAC,sBAAsB;MAAAC,QAAA,gBACnCxB,OAAA;QAAIuB,SAAS,EAAC,oBAAoB;QAAAC,QAAA,EAAEL;MAAS;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACnD9B,OAAA;QAAGuB,SAAS,EAAC,0BAA0B;QAAAC,QAAA,EAAEJ;MAAe;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1D,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACvB,EAAA,CA9BQN,WAAW;AAAA8B,EAAA,GAAX9B,WAAW;AAgCpB,eAAeA,WAAW;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}